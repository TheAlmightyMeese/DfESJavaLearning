<?xml version="1.0" encoding="UTF-8"?><testrun name="VehicleTest" project="VehicleExerciseMaven" tests="10" started="10" failures="1" errors="0" ignored="0">
  <testsuite name="com.qa.garage.VehicleTest" time="0.0">
    <testcase name="setPetrol" classname="com.qa.garage.VehicleTest" time="0.0"/>
    <testcase name="toStringTest" classname="com.qa.garage.VehicleTest" time="0.0">
      <failure>
        <expected>Vehicle Make: Test, Engine Size (CC): 1, Petrol?: false, Colour: Blank</expected>
        <actual> Vehicle Make: Test, Engine Size (CC): 2, Petrol?: false, Colour: Blank</actual>
        org.junit.ComparisonFailure: Match Error expected:&lt;[Vehicle Make: Test, Engine Size (CC): 1], Petrol?: false, Co...&gt; but was:&lt;[ Vehicle Make: Test, Engine Size (CC): 2], Petrol?: false, Co...&gt;&#13;
	at org.junit.Assert.assertEquals(Assert.java:115)&#13;
	at com.qa.garage.VehicleTest.toStringTest(VehicleTest.java:64)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
&#13;

      </failure>
    </testcase>
    <testcase name="setEngineSizeTest" classname="com.qa.garage.VehicleTest" time="0.0"/>
    <testcase name="objectTest" classname="com.qa.garage.VehicleTest" time="0.0"/>
    <testcase name="getColourTest" classname="com.qa.garage.VehicleTest" time="0.0"/>
    <testcase name="isPetrolTest" classname="com.qa.garage.VehicleTest" time="0.0"/>
    <testcase name="getEngineSizeTest" classname="com.qa.garage.VehicleTest" time="0.0"/>
    <testcase name="setColourTest" classname="com.qa.garage.VehicleTest" time="0.0"/>
    <testcase name="setMakeTest" classname="com.qa.garage.VehicleTest" time="0.0"/>
    <testcase name="getMakeTest" classname="com.qa.garage.VehicleTest" time="0.0"/>
  </testsuite>
</testrun>
